// Code generated by protoc-gen-go. DO NOT EDIT.
// source: micro.proto

package transport

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Meta                 map[string]string `protobuf:"bytes,2,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Service              string            `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	Endpoint             string            `protobuf:"bytes,4,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Data                 []byte            `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0147923bbc6a29d9, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Request) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Request) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *Request) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *Request) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Response struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_0147923bbc6a29d9, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Response) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "transport.Request")
	proto.RegisterMapType((map[string]string)(nil), "transport.Request.MetaEntry")
	proto.RegisterType((*Response)(nil), "transport.Response")
}

func init() { proto.RegisterFile("micro.proto", fileDescriptor_0147923bbc6a29d9) }

var fileDescriptor_0147923bbc6a29d9 = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x50, 0x31, 0x4f, 0xf3, 0x30,
	0x10, 0xfd, 0xe2, 0x24, 0x5f, 0x9b, 0x2b, 0x05, 0x74, 0x30, 0x58, 0x11, 0x43, 0x94, 0x29, 0x93,
	0x41, 0x65, 0x00, 0x95, 0x0d, 0x84, 0xc4, 0xd2, 0x25, 0x23, 0x9b, 0xa9, 0x6f, 0xb0, 0x68, 0xed,
	0x60, 0xbb, 0x95, 0xfa, 0x27, 0xf9, 0x4d, 0xa8, 0x6e, 0x13, 0x84, 0xba, 0xdd, 0xbb, 0xf3, 0x7b,
	0xcf, 0xef, 0xc1, 0x64, 0xad, 0x97, 0xce, 0x8a, 0xce, 0xd9, 0x60, 0xb1, 0x08, 0x4e, 0x1a, 0xdf,
	0x59, 0x17, 0xea, 0xef, 0x04, 0x46, 0x2d, 0x7d, 0x6d, 0xc8, 0x07, 0x3c, 0x07, 0xa6, 0x15, 0x4f,
	0xaa, 0xa4, 0x29, 0x5a, 0xa6, 0x15, 0xde, 0x41, 0xb6, 0xa6, 0x20, 0x39, 0xab, 0xd2, 0x66, 0x32,
	0xbb, 0x11, 0x03, 0x4b, 0x1c, 0x19, 0x62, 0x41, 0x41, 0xbe, 0x9a, 0xe0, 0x76, 0x6d, 0x7c, 0x89,
	0x1c, 0x46, 0x9e, 0xdc, 0x56, 0x2f, 0x89, 0xa7, 0x51, 0xa6, 0x87, 0x58, 0xc2, 0x98, 0x8c, 0xea,
	0xac, 0x36, 0x81, 0x67, 0xf1, 0x34, 0x60, 0x44, 0xc8, 0x94, 0x0c, 0x92, 0xe7, 0x55, 0xd2, 0x9c,
	0xb5, 0x71, 0x2e, 0x1f, 0xa0, 0x18, 0xc4, 0xf1, 0x12, 0xd2, 0x4f, 0xda, 0x1d, 0x7f, 0xb6, 0x1f,
	0xf1, 0x1a, 0xf2, 0xad, 0x5c, 0x6d, 0x88, 0xb3, 0xb8, 0x3b, 0x80, 0x39, 0x7b, 0x4c, 0x6a, 0x01,
	0xe3, 0x96, 0x7c, 0x67, 0x8d, 0xa7, 0x93, 0x40, 0xbd, 0x11, 0xfb, 0x35, 0x9a, 0xbd, 0x40, 0xbe,
	0xd8, 0x57, 0x83, 0x73, 0x98, 0xbe, 0x49, 0xa3, 0x56, 0xd4, 0xd7, 0x81, 0xa7, 0x81, 0xcb, 0xab,
	0x3f, 0xbb, 0x83, 0x4d, 0xfd, 0xef, 0xf9, 0xe2, 0x7d, 0x2a, 0xc4, 0xed, 0xd3, 0x70, 0xfb, 0xf8,
	0x1f, 0x8b, 0xbe, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0xa8, 0xd1, 0x32, 0xa7, 0x77, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MicroClient is the client API for Micro service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MicroClient interface {
	HandleRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type microClient struct {
	cc *grpc.ClientConn
}

func NewMicroClient(cc *grpc.ClientConn) MicroClient {
	return &microClient{cc}
}

func (c *microClient) HandleRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/transport.Micro/HandleRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MicroServer is the server API for Micro service.
type MicroServer interface {
	HandleRequest(context.Context, *Request) (*Response, error)
}

// UnimplementedMicroServer can be embedded to have forward compatible implementations.
type UnimplementedMicroServer struct {
}

func (*UnimplementedMicroServer) HandleRequest(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleRequest not implemented")
}

func RegisterMicroServer(s *grpc.Server, srv MicroServer) {
	s.RegisterService(&_Micro_serviceDesc, srv)
}

func _Micro_HandleRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MicroServer).HandleRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Micro/HandleRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MicroServer).HandleRequest(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Micro_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.Micro",
	HandlerType: (*MicroServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleRequest",
			Handler:    _Micro_HandleRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "micro.proto",
}
